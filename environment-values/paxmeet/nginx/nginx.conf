worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 1024;
}

http {
  upstream paxmeet-server {
    server paxmeet-server:5000;
  }

  upstream etherpad {
    server etherpad:9001;
  }

  upstream streaming {
    server streaming:8080;
  }

  upstream livekit {
    server livekit:7880;
  }

  upstream ingress-whip {
    server livekit-ingress:8089;
  }

  upstream ingress-rtmp {
    server livekit-ingress:1935;
  }

  server {
    listen 80;
    listen [::]:80;

    server_name _;

    proxy_http_version      1.1;

    proxy_set_header        Host $host;
    proxy_set_header        Upgrade $http_upgrade;
    proxy_set_header        Connection "upgrade";

    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_set_header        X-Forwarded-Host $server_name;

    proxy_read_timeout      300s;
    proxy_send_timeout      300s;
    proxy_connect_timeout   300s;

    client_max_body_size    16M;

    location / {
      proxy_pass              http://paxmeet-server;
      proxy_redirect          default;
    }

    location /api/ {
      rewrite                 ^/api/(.*)$ /$1 break;
      proxy_pass              http://paxmeet-server;
      proxy_redirect          default;
    }

    location /apiv2/ {
      rewrite                 ^/apiv2/(.*)$ /$1 break;
      proxy_pass              http://streaming;
      proxy_redirect          default;
    }

    location /etherpad/ {
      rewrite                 ^/etherpad/(.*)$ /$1 break;
      proxy_pass              http://etherpad;
      proxy_redirect          default;
    }

    location /livekit/ {
      rewrite                 ^/livekit/(.*)$ /$1 break;
      proxy_pass              http://livekit;
      proxy_redirect          default;
    }

    location /ingress-whip/ {
      rewrite                 ^/ingress-whip/(.*)$ /$1 break;
      proxy_pass              http://ingress-whip;
      proxy_redirect          default;
    }

    location /ingress-rtmp/ {
      rewrite                 ^/ingress-rtmp/(.*)$ /$1 break;
      proxy_pass              http://ingress-rtmp;
      proxy_redirect          default;
    }
  }
}
